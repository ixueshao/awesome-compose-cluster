[mysqld]
##### 这两部操作可以解决mysql连接很慢的问题 #####
# 根据官方文档说明，如果你的mysql主机查询DNS很慢或是有很多客户端主机时会导致连接很慢，由于我们的开发机器是不能够连接外网的，
# 所以DNS解析是不可能完成的，从而也就明白了为什么连接那么慢了。同时，请注意在增加该配置参数后，mysql的授权表中的host字段就
# 不能够使用域名而只能够使用 ip地址了，因为这是禁止了域名解析的结果。

# 1.禁止域名解析
skip-host-cache
# 2.禁用dns解析，但是，这样不能在mysql的授权表中使用主机名了，只能使用IP。
skip-name-resolve

# 数据库编号, 要具有唯一性, 不能跟其他数据库重复, 方便同步区分
server-id = 11
#prompt=(\u@\h) [\d] \R:\m:\s>\_

####################################################################
## 启用binlog日志，格式: mysql默认采用statement，建议使用 mixed(是statement和row模式的结合)
# 进制日志包含了对数据库进行更改的所有查询（例如，INSERT，UPDATE，DELETE，REPLACE，和ALTER TABLE）。它主要用于复制和数据恢复。
####################################################################
binlog_format = mixed
log_bin = /var/lib/mysql/mysql-bin.log
relay-log = /var/lib/mysql/mysql-relay-bin.log

####################################################################
## 需要同步的数据库
####################################################################
binlog_do_db = mydb

####################################################################
## 启用错误日志;错误日志包含了MySQL启动，运行，或者关闭时产生的诊断消息。这些消息包括服务器启动和关闭时的消息，以及服务器运行时出现的任何严重错误
####################################################################
log_error_verbosity=1
log_error=/var/lib/mysql/server_error.log
log_warnings=1

####################################################################
## 启用查询日志,查询日志记录了所有到MySQL服务器的查询。这对于审计和性能分析非常有用，但是它可能会产生大量的数据，因此在生产环境中通常不会启用
####################################################################
general_log_file=/var/lib/mysql/server_general.log
general_log=ON

####################################################################
## 启用慢查询日志;慢查询日志记录了执行时间超过指定阈值的查询。这对于性能优化非常有用，因为它可以帮助你找出需要优化的查询。
####################################################################
slow_query_log_file=/var/lib/mysql/server_slow.log
slow_query_log=ON
long_query_time=2

####################################################################
## 启用MySQL日志审计;审计日志记录了所有的登录尝试和数据库操作。这对于安全审计非常有用
####################################################################
plugin_load_add = server_audit.so
server_audit_output_type = file #指定审计日志的输出类型为文件。
server_audit_logging=on #启用审计日志功能。
server_audit_file_rotate_now = ON #立即旋转审计日志文件。
server_audit_file_path =/var/lib/mysql/server_audit.log #设置审计日志文件的路径为/var/lib/mysql/server_audit.log。请确保该路径存在并具有足够的权限。
server_audit_file_rotate_size=100000000 #设置审计日志文件达到1MB时进行旋转。
server_audit_file_rotations=2 #设置最大的审计日志文件旋转次数为2，意味着系统将保留三个日志文件（当前日志文件和两个旋转日志文件）。
server_audit=FORCE_PLUS_PERMANENT #将审计日志设置为强制模式，即使用户使用SET语句尝试更改配置也不会生效。
server_audit_incl_users='root' #设置包含哪些用户的审计日志。这里设置为root，只记录root用户的操作。你可以根据需要添加其他用户，多个用户之间使用逗号分隔。
server_audit_excl_users='' #设置排除哪些用户的审计日志。这里为空，表示不排除任何用户。
server_audit_events = connect,query,table,query_ddl,query_dml,query_dcl,QUERY_DML_NO_SELECT #指定要记录的审计事件类型，包括连接、查询、表操作、DDL查询、DML查询、DCL查询和非SELECT的DML查询。
server_audit_syslog_facility=LOG_USER #将审计日志发送到syslog的用户日志（LOG_USER）设施。
server_audit_syslog_ident=mysql-server_auditing #指定发送到syslog的身份标识。
server_audit_syslog_priority=LOG_INFO #将审计日志发送到syslog的信息级别为LOG_INFO。

####################################################################
## 启用MySQL用户密码策略
####################################################################
#plugin_load_add=validate_password.so
#validate-password=FORCE_PLUS_PERMANENT
#validate_password_policy=2
#validate_password_length=10
#validate_password_mixed_case_count=1
#validate_password_number_count=1
#validate_password_special_char_count=1

####################################################################
## 启用MySQL登录失败限制
####################################################################
plugin_load_add = connection_control.so
max_connect_errors=3
connection-control = FORCE
connection-control-failed-login-attempts = FORCE
connection_control_min_connection_delay = 1000
connection_control_max_connection_delay = 86400
connection_control_failed_connections_threshold	= 3
